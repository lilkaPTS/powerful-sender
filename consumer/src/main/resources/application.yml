spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: kafka-example-consumer
  kafka:
    # Адреса всех брокеров кластера
    bootstrap-servers: host.docker.internal:29092
    listener:
      # Получение каждой записи должно быть подтверждено
      ack-mode: record
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
    consumer:
      group-id: ${spring.application.name}
      autoOffsetReset: earliest
      # Сериализаторы для всех типов
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      # Тип, для которого определяем конкретные сериализаторы
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer

kafka:
  topics:
    test-topic: topic1
  id: ${CONSUMER_GROUP_ID:consumer-group-1}

